{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","keyPress","event","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAYaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,IAFT,EAaEC,SAAW,SAACC,GACV,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,OAd/B,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,YAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,YAV/C,oBAiBE,WACE,OACE,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKP,MAAMC,IAAX,mCAC+BM,KAAKP,MAAMC,IAD1C,KAEG,kCAvBd,GAAyBS,IAAMC,W,MCP/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.c8dd46ed.chunk.js","sourcesContent":["import React from 'react';\n\n/* export const App: React.FC = () => (\n  <div className=\"App\">\n    <p className=\"App__message\">The last pressed key is [Enter]</p>\n  </div>\n); */\n\ntype State = {\n  key: null | string\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    key: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.keyPress);\n  }\n\n  keyPress = (event: KeyboardEvent) => {\n    this.setState({ key: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.key\n            ? `The last pressed key is [${this.state.key}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}